SERVER SIDE WEB-SCRIPTING

Java Servlets
	- Java Servlets are used to extend the capabilities of servers and implement web applications.
	- A Java Servlet is typically a Java object that runs inside a Servlet container and responds to HTTP requests.
		*Java Container 
			- also known as a Web Container
			- Interacts with Java Servlets, and is responsible for managing a Servlet's lifecycle. 
				e.g. Tomcat, Glassfish, Jetty, Virgo, WildFly
	- Web technology for Java
	- Typically run on the HTTP Protocol
	- Part of the Java EE / Java Enterprise Edition
 * Java Servlet Packages
	- javax.servlet and javax.servlet.http

Java Servlet Versions

	1. J2EE 1.2 (December 12, 1999)
	2. J2EE 1.3 (September 24, 2001)
	3. J2EE 1.4 (November 11, 2003)
	4. Java EE 5 (May 11, 2006) 
	5. Java EE 6 (December 10, 2009)
	6. Java EE 7 (June 12, 2013)
	7. Java EE 8 (September 21, 2017)

Java Servlets Lifecycle
	- provides the environment in which the servlet runs.
	
	1. Java Servlet Instantiation
		- constructor call
		- the container creates an instance of the servlet class 
		- invoked implicitly

	2. Initialization 
                - A Java Servlet is initialized by calling the init() method
		- The init() method is invoked only once. 
		- When a servlet is invoked, a single instance of each servlet gets created.
		- The  init() method creates / loads data that will be used in the lifecycle of a servlet.
			*insert screenshot*

	3. Request Handling 
		- service() method
		- The service() method is invoked at every client request.
		- The service() method has the parameters HttpServletRequest and HttpServletResponse.
		* Care must be exercised to ensure that the code run by the servlet is thread-safe since multiple client-requests
		  are handled by single, multi-threaded servlet instance.
			*insert screenshot*

	4. Destruction
		- destroy() method
		- The destroy() method is invoked only once before the servlet is unloaded.
		- After the destroy() method has been called, the servlet object is marked for garbage collection.
			*insert screenshot*


HTTP Servlet
		- an HTTP servlet handles HTTP request and provides an HTTP Response.	
		- HttpServlet is present in the javax.servlet.http package.
		- Extend the GenericServletClass	

	 HTTP Servlet Request 
		- binds the request information like the header and request methods.
		- sent by the client and received by the servlet
		- extends the GenericServletClass
			e.g. HTTP Request Method, Request URI, Query String, Message Headers, Message Payload etc.

	 HTTP Servlet Response
		- Binds all information of the HTTP protocol
	        - Generated by the client and sent back to the requesting client
		

SERVLETS - FORM DATA
    
    - a browser uses two method to pass information to the web server:
		1. Get Method
			- the Get Method requests the data from a specified resource.
			- default method to pass information from browser to web server.
		2. Post Method
			- submits the processed data to a specified resource
			 
I.   Simple Text Based Response(HTML)
II.  Binary Response (IMAGE)
III. Handling Form Data Submission (GET)
IV.  Handling Form Data Submission (POST)
V.   Handling File Uploads
VI. Dynamic Content (with Database Access)
	- dynamic content do not exist as they are fetched
	- dynamic content are created by the server on the fly
VII. Dynamic Content via AJAX (with Database Access)



SERVLETS AND JAVA SERVER PAGES(JSP)
	- JSP is a technology for devleoping dynamic web pages.
	- Used to implement the GUI Part of an application. 
	- Through the use of servlets, Java Server Pages control the content of Web Pages.         

I. Lists using JSP 
II.Lists using JSP and Servlet

ELEMENTS OF JAVA SERVER PAGES

I. Scriplet
	- a scriplet contains Java language statements, varibales, methdos, declarations, or expressions. 
Syntax:
	<% java source code %> 

II. Declarations
	- Declarations declare one or more variables/methods that can be used for the
	  java code in the JSP file.
Syntax:
<%! declaration; [ declaration; ]+ ... %>	

III. Expressions
	- JSP expressions contains a scripting language expression that is evlauted then converted to a string and inserted where the 
	expression appears in the JSP File.
Syntax: 
<%= expression %>

IV. JSP Comments
Syntax:
<%-- JSP Comment --%>

V. JSP Directives
	- Directives in JSP affects the whole structure of a servlet class.
	- JSP directives can contain a number of attributes whicn can be list down as key-value oaris and are separated by commas. 
Syntax:
<%@ directive attribute="value" %>

Three Types of Directive Tag:
1. <%@ page ... %>
	- Defines page-dependent attributes
	- used to provide instructions to the container
		e.g. Scripting Language
		     Error Page etc.		

2. <%@ include ... %>
	- during he translation phase, a file is included

3. <%@ taglib ... %>
	- This directive tag declares a tag library that contains custom actions used in the page.
 

VI. JSP Actions
	- to control the behavior of the servlet engine JSP actions use constructs in XML syntax.
Syntax:
<jsp:action_name attribute="value" />
 List of JSP Actions:
	jsp:include
	jsp:useBean
	jsp:setProperty
	jsp:setProperty
	jsp:forward
	jsp:plugin
	jsp:element
	jsp:attribute
	jsp:body
	jsp:text






















